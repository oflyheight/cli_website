{"version":3,"sources":["firebase/config.js","firebase/firebase.js","firebase/context.js","firebase/index.js","componentes/ui/Orden.js","componentes/paginas/Ordenes.js","componentes/ui/Platillo.js","componentes/paginas/Menu.js","componentes/paginas/NuevoPlatillo.js","componentes/ui/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","app","initializeApp","this","db","firestore","storage","FirebaseContext","createContext","Orden","orden","useState","tiempoentrega","guardarTiempoEntrega","useContext","className","id","map","platillos","cantidad","nombre","total","type","min","max","placeholder","value","onChange","e","parseInt","target","onClick","collection","doc","update","error","console","log","definirTiempo","completado","completarOrden","Ordenes","ordenes","guardarOrdenes","manejarSnapshot","snapshot","docs","data","useEffect","where","onSnapshot","key","Platillo","platillo","existenciaRef","useRef","existencia","imagen","categoria","precio","descripcion","src","alt","ref","current","actualizarDisponibilidad","toUpperCase","Menu","guardarPlatillos","to","NuevoPlatillo","subiendo","guardarSubiendo","progreso","guardarProgreso","urlimagen","guardarUrlimagen","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","Yup","required","onSubmit","add","handleUploadSuccess","a","child","getDownloadURL","url","handleSubmit","htmlFor","values","handleChange","onBlur","handleBlur","touched","errors","role","name","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","style","width","Sidebar","activeClassName","exact","App","Provider","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c5f84a60.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyB4p2A6nd37-IwFCciKzZLc8_k7l6_5TYU\",\r\n  authDomain: \"restaurantapp-85cbf.firebaseapp.com\",\r\n  databaseURL: \"https://restaurantapp-85cbf.firebaseio.com\",\r\n  projectId: \"restaurantapp-85cbf\",\r\n  storageBucket: \"restaurantapp-85cbf.appspot.com\",\r\n  messagingSenderId: \"673444213031\",\r\n  appId: \"1:673444213031:web:67bbaa51d6dbb61399f902\",\r\n  measurementId: \"G-LX9XCF0NFZ\"\r\n};\r\n  export default firebaseConfig;","import app from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from './config';\r\nimport 'firebase/storage';\r\n\r\n\r\n\r\nclass Firebase{\r\n    constructor(){\r\n        app.initializeApp(firebaseConfig)\r\n        \r\n        this.db = app.firestore()\r\n        this.storage = app.storage();\r\n    }\r\n}\r\n\r\nconst firebase = new Firebase();\r\n\r\nexport default firebase;","import { createContext } from 'react';\r\n\r\nconst FirebaseContext = createContext();\r\n\r\nexport default FirebaseContext;","import firebase from './firebase';\r\nimport FirebaseContext from './context'\r\n\r\nexport {FirebaseContext}\r\n\r\nexport default firebase;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { FirebaseContext } from '../../firebase';\r\n\r\n\r\nconst Orden = ({ orden }) => {\r\n\r\n    const [tiempoentrega, guardarTiempoEntrega] = useState(0);\r\n\r\n    //define tiempo de entrega\r\n    const definirTiempo = id => {\r\n        try {\r\n            firebase.db.collection('ordenes')\r\n                .doc(id)\r\n                .update({\r\n                    tiempoentrega\r\n                })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    //Completa el estado de la orden\r\n    const completarOrden = id =>{\r\n        try {\r\n            firebase.db.collection('ordenes')\r\n                .doc(id)\r\n                .update({\r\n                    completado:true\r\n                })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Context Firebase\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    return ( \r\n        <div className=\"sm:w-1/2 lg:w-1/3 px-2 mb-4\">\r\n            <div className=\"p-3 shadow-md bg-white\">\r\n                <h1 className=\"text-yellow-600 text-lg font-bold\">\r\n                    {orden.id}\r\n                </h1>\r\n                {orden.orden.map(platillos =>(\r\n                    <p className=\"text-gray-600\">\r\n                        {platillos.cantidad}{platillos.nombre}\r\n                    </p>\r\n                ))}\r\n\r\n                <p className=\"text-gray-700 font-bold\">Total a Pagar Q. {orden.total}</p>\r\n\r\n                {orden.tiempoentrega === 0 &&(\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            TIempo de Entrega\r\n                        </label>\r\n                        <input\r\n                        type=\"number\"\r\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        min =\"1\"\r\n                        max=\"20\"\r\n                        placeholder=\"20\"\r\n                        value={tiempoentrega}\r\n                        onChange={ e => guardarTiempoEntrega(parseInt(e.target.value))}\r\n                        >\r\n                        </input>\r\n                        <button\r\n                        onClick={ () => definirTiempo( orden.id) }\r\n                        type=\"submit\"\r\n                        className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\">\r\n                            Definir Tiempo\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {orden.tiempoentrega > 0 &&(\r\n                    <p className=\"text-gray-700\">\r\n                        Tiempo de entrega:\r\n                        <span className=\"font-bold\">\r\n                            {orden.tiempoentrega} minutos\r\n                        </span>\r\n                    </p>\r\n                )}\r\n\r\n                { !orden.completado && orden.tiempoentrega > 0 && (\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                    onClick={ () => completarOrden( orden.id)}\r\n                    >\r\n                        Marcar como lista\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Orden;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { FirebaseContext } from '../../firebase';\r\nimport Orden from '../ui/Orden';\r\n\r\n\r\nconst Ordenes = () =>{\r\n\r\n    //context con las operaciones de firebase\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    //state con las ordenes\r\n    const [ordenes, guardarOrdenes] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const obtenerOrdenes = () =>{\r\n            firebase.db.collection('ordenes').where('completado', '==', false).onSnapshot(manejarSnapshot);\r\n        }\r\n        obtenerOrdenes();\r\n    }, []);\r\n\r\n    function manejarSnapshot(snapshot){\r\n        const ordenes = snapshot.docs.map(doc =>{\r\n            return{\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }\r\n        });\r\n        guardarOrdenes(ordenes);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"text-3xl font-light mb-4\">Ordenes</h1>\r\n            \r\n            <div className = \"sm:flex sm:felx-wrap -mx-3\">\r\n            {ordenes.map(orden => (\r\n                <Orden \r\n                    key={orden.id}\r\n                    orden = {orden}\r\n                />\r\n            ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Ordenes;\r\n","import React, {useContext, useRef} from 'react';\r\nimport { FirebaseContext } from '../../firebase';\r\n\r\n\r\nconst Platillo = ({platillo}) => {\r\n\r\n    //existencia ref para acceder al valor\r\n    const existenciaRef = useRef(platillo.existencia);\r\n\r\n    const {id, nombre, imagen, existencia, categoria, precio, descripcion} = platillo;\r\n\r\n    //context para cambios en la db\r\n    const{firebase} = useContext(FirebaseContext)\r\n\r\n    //modificar el estado del platillo\r\n    const actualizarDisponibilidad = () =>{\r\n        const existencia =(existenciaRef.current.value ===\"true\");\r\n\r\n\r\n        try {\r\n            firebase.db.collection('productos')\r\n            .doc(id)\r\n            .update({\r\n                existencia\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"w-full px-3 mb-4\">\r\n            <div className=\"p-5 shadow-md bg-white\">\r\n                <div className=\"lg:flex\">\r\n                        <div className=\"lg:w-5/12 xl:w-3/12\">\r\n                            <img src={imagen} alt=\"Imagen Platillo\"></img>\r\n                            <div className=\"sm:flex sm:-mx-2 pl-2\">\r\n                                <label className=\"block mt-5 sm:w-2/4\">\r\n                                    <span className=\"block text-gray-600 mb-2\">Existencia</span>\r\n                                    <select \r\n                                    className=\"bg-white shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    value={existencia}\r\n                                    ref={existenciaRef}\r\n                                    onChange={() =>actualizarDisponibilidad()}>\r\n                                        <option value=\"true\">Disponible</option>\r\n                                        <option value=\"false\">No Disponible</option>\r\n                                    </select>\r\n                                </label>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"lg:w-7/12 xl:w-9/12 pl-5\">\r\n                            <p className=\"font-bold text-2xl text-yellow-600 mb-4\">{nombre}</p>\r\n                            <p className=\"text-gray-600 mb-4\">Categoria: {' '} \r\n                                <span className=\"text-gray-700 font-bold\">{categoria.toUpperCase()}</span></p>\r\n                                <p className=\"text-gray-600 mb-4\">{descripcion}</p>\r\n                                <p className=\"text-gray-600 mb-4\">Q.: {' '} \r\n                                <span className=\"text-gray-700 font-bold\">{precio}</span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Platillo;","import React, {useState, useEffect, useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../../firebase';\r\n\r\nimport Platillo from '../ui/Platillo';\r\n\r\nconst Menu = () =>{\r\n\r\n    //define el state\r\n    const [ platillos, guardarPlatillos ] = useState([]);\r\n\r\n    const{ firebase } = useContext(FirebaseContext);\r\n\r\n    // consultar la base de datos al cargar\r\n    useEffect(() =>{\r\n        const obtenerPlatillos =  () =>{\r\n            const resultado = firebase.db.collection('productos').onSnapshot(manejarSnapshot);\r\n            \r\n        }\r\n        obtenerPlatillos();\r\n    }, []);\r\n\r\n    //funcion para traer datos en tiempo real de la base de datos.\r\n    function manejarSnapshot(snapshot){\r\n        const platillos = snapshot.docs.map(doc =>{\r\n            return{\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }\r\n        });\r\n        //almacena resultados en el state\r\n        guardarPlatillos(platillos);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"text-3xl font-light mb-4\">Menú</h1>\r\n            <Link to=\"/nuevo-platillo\" className=\" bg-blue-800 hover:bg-blue-700, inline-block nb-5 p-2 text-white uppercase font-bold\">\r\n                Agregar Platillo\r\n            </Link>\r\n\r\n            {platillos.map(platillo =>(\r\n                <Platillo\r\n                key={platillos.id}\r\n                platillo={platillo}>\r\n\r\n                </Platillo>\r\n            ))}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { FirebaseContext } from '../../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\n\r\nconst NuevoPlatillo = () =>{\r\n\r\n    //state par alas imagenes\r\n    const [subiendo, guardarSubiendo] = useState(false);\r\n    const [progreso, guardarProgreso] = useState(0);\r\n    const [urlimagen, guardarUrlimagen] = useState('');\r\n\r\n    //context con las operaciones de firebase\r\n    const { firebase } = useContext(FirebaseContext);\r\n        //console.log(firebase);\r\n    \r\n    //Hook para redireccionar\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //Validación y leer los datos del formulario\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre: '',\r\n            precio: '',\r\n            categoria: '',\r\n            imagen: '',\r\n            descripcion: '',\r\n        },\r\n\r\n        validationSchema: Yup.object({\r\n            nombre: Yup.string()\r\n                .min(3, 'Los Platillos deben tener almenos 3 caracteres')\r\n                .required('El nombre del platillo es obligatorio'),\r\n\r\n            precio: Yup.number()\r\n                .min(1, 'Debes agregar un número')\r\n                .required('El precio del platillo es obligatorio'),\r\n\r\n            categoria: Yup.string()\r\n                .required('La categoria es obligatoria'),\r\n\r\n            descripcion: Yup.string()\r\n                .min(10, 'La descripción debe de ser más larga')\r\n                .required('El descripción del platillo es obligatorio'),\r\n\r\n        }),\r\n\r\n        onSubmit: platillos =>{\r\n            try {\r\n                platillos.existencia =true;\r\n                platillos.imagen = urlimagen;\r\n                firebase.db.collection('productos').add(platillos);\r\n                \r\n                //redireccionar\r\n                navigate('/menu')\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    })\r\n\r\n    //Todos sobre las imagenes\r\n    const handleUploadStart = () =>{\r\n        guardarProgreso(0);\r\n        guardarSubiendo(true);\r\n    }\r\n\r\n    const handleUploadError = error =>{\r\n        guardarSubiendo(false);\r\n        console.log(error);\r\n\r\n    }\r\n\r\n    const handleUploadSuccess = async nombre =>{\r\n        guardarProgreso(100);\r\n        guardarSubiendo(false);\r\n\r\n        //almacenar la url del destino\r\n        const url = await firebase\r\n        .storage\r\n        .ref(\"productos\")\r\n        .child(nombre)\r\n        .getDownloadURL();\r\n\r\n        console.log(url);\r\n        guardarUrlimagen(url);\r\n    }\r\n\r\n    const handleProgress = progreso =>{\r\n        guardarProgreso(progreso);\r\n        console.log(progreso);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"text-3xl font-light mb-4\">Agregar Platillo</h1>\r\n            <div className=\"flex justify-center mt-10\">\r\n                <div className=\"w-full max-w-3xl\">\r\n                    <form\r\n                    onSubmit={formik.handleSubmit} >\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">Nombre</label>\r\n                            <input className=\"shadow appearance-none \r\n                            border rounded w-full py-2 px-3 text-gray-700 \r\n                            leading-tight focus:outline-none focus:shadow-outline\"\r\n                            id=\"nombre\" \r\n                            type=\"text\" \r\n                            placeholder=\"Nombre Platillo\"\r\n                            value={formik.values.nombre}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}>\r\n                            </input>\r\n                        </div>\r\n\r\n                        { formik.touched.nombre && formik.errors.nombre ?(\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\"\r\n                            role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error.</p>\r\n                                <p>{formik.errors.nombre}</p>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">Precio</label>\r\n                            <input className=\"shadow appearance-none \r\n                            border rounded w-full py-2 px-3 text-gray-700 \r\n                            leading-tight focus:outline-none focus:shadow-outline\"\r\n                            id=\"precio\" \r\n                            type=\"number\" \r\n                            placeholder=\"Q.20\" \r\n                            min=\"0\"\r\n                            value={formik.values.precio}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}>                \r\n                            </input>\r\n                        </div>\r\n\r\n                        { formik.touched.precio && formik.errors.precio ?(\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\"\r\n                            role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error.</p>\r\n                                <p>{formik.errors.precio}</p>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"categoria\">Categoria</label>\r\n                                <select className=\"shadow appearance-none \r\n                                     border rounded w-full py-2 px-3 text-gray-700 \r\n                                     leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    name=\"categoria\"\r\n                                    value={formik.values.categoria}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}>\r\n                                        <option value=\"\">-- Seleccione --</option>\r\n                                        <option value=\"desayuno\">Desayuno</option>\r\n                                        <option value=\"comida\">Comida</option>\r\n                                        <option value=\"cena\">Cena</option>\r\n                                        <option value=\"bebida\">Bebidas</option>\r\n                                        <option value=\"postre\">Postre</option>\r\n                                        <option value=\"ensalada\">Ensalada</option>\r\n                                </select>\r\n                        </div>\r\n\r\n                        { formik.touched.categoria && formik.errors.categoria ?(\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\"\r\n                            role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error.</p>\r\n                                <p>{formik.errors.categoria}</p>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"imagen\">Imagen</label>\r\n                            <FileUploader accept=\"image/*\"\r\n                            id=\"imagen\"\r\n                            name=\"imagen\"\r\n                            randomizeFilename\r\n                            storageRef={firebase.storage.ref(\"productos\")}\r\n                            onUploadStart={handleUploadStart}\r\n                            onUploadError={handleUploadError}\r\n                            onUploadSuccess={handleUploadSuccess}\r\n                            onProgress={handleProgress}>\r\n\r\n                            </FileUploader>\r\n                            \r\n                        </div>\r\n\r\n                        { subiendo && (\r\n                            <div className=\"h-12 relative w-full border\">\r\n                                <div className=\"bg-green-500 absolute left-0 top-0 text-white px-2 text-sm h-12 flex items-center\" style={{ width: `${progreso}%`}}>\r\n                                    {progreso} %\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                        {urlimagen && (\r\n                            <p className=\"bg-green-500 text-white p-3 text-center my-5\">\r\n                                La imagen se subió correctamente.\r\n                            </p>\r\n                        )}\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"descripcion\">Descripción</label>\r\n                            <textarea className=\"shadow appearance-none \r\n                            border rounded w-full py-2 px-3 text-gray-700 \r\n                            leading-tight focus:outline-none focus:shadow-outline h-40\"\r\n                            id=\"descripcion\"  \r\n                            placeholder=\"Descripción del Platillo\"\r\n                            value={formik.values.descripcion}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}>  \r\n                            </textarea>\r\n                        </div>\r\n\r\n                        { formik.touched.descripcion && formik.errors.descripcion ?(\r\n                            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\"\r\n                            role=\"alert\">\r\n                                <p className=\"font-bold\">Hubo un error.</p>\r\n                                <p>{formik.errors.descripcion}</p>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n\r\n\r\n                        <input type=\"submit\"\r\n                        className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                        value=\"Agregar Platillo\">\r\n                        \r\n                        </input>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NuevoPlatillo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n       <div className=\"md:w-2/5 xl:w-1/5 bg-gray-800\">\r\n           <div className=\"p-6\">\r\n                <p className=\"uppercase text-white text-2xl tracking-wide text-center font-bold\">RestaruanteApp</p>\r\n                <p className=\"mt-3 text-gray-600\">Administra tu restaurant en las siguientes opciones.</p>\r\n                <nav className=\"mt-10\">\r\n                    <NavLink className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900\" activeClassName=\"text-yellow-500\" exact=\"true\" to=\"/\">Ordenes</NavLink>\r\n                    <NavLink className=\"p-1 text-gray-400 block hover:bg-yellow-500 hover:text-gray-900\" activeClassName=\"text-yellow-500\" exact=\"true\" to=\"/menu\">Menú</NavLink>\r\n                </nav>\r\n           </div>\r\n       </div>\r\n     );\r\n}\r\n \r\nexport default Sidebar;\r\n","//dependencias\nimport React from 'react';\nimport { Routes, Route } from 'react-router';\n\n//componentes\nimport Ordenes from './componentes/paginas/Ordenes';\nimport Menu from './componentes/paginas/Menu';\nimport NuevoPlatillo from './componentes/paginas/NuevoPlatillo';\nimport Sudebar from './componentes/ui/Sidebar';\nimport Sidebar from './componentes/ui/Sidebar';\nimport firebase, { FirebaseContext} from './firebase';\n\n\nfunction App() {\n  return (\n   <FirebaseContext.Provider\n   value={{\n     firebase\n   }}>\n      <div className=\"md:flex min-h-screen\">\n        <Sidebar />\n        <div className=\"md:w-3/5 xl:w-4/5 p-6\">\n          <Routes>\n                <Route path =\"/\" element={<Ordenes />} />\n                <Route path =\"/menu\" element={<Menu />} />\n                <Route path =\"/nuevo-platillo\" element={<NuevoPlatillo />} />\n          </Routes>\n        </div>\n        \n    </div>\n   </FirebaseContext.Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport{ BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}